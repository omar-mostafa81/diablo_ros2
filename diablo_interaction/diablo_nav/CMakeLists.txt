cmake_minimum_required(VERSION 3.8)
project(diablo_nav)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(data_msgs REQUIRED)
find_package(motion_msgs REQUIRED)
find_package(diablo_utils REQUIRED)
find_package(diablo_body REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(nav_msgs REQUIRED)

set(dependencies
  rclcpp
  diablo_body
  motion_msgs
  diablo_utils
  nav_msgs
  data_msgs
  geometry_msgs
  sensor_msgs
)

set(executable_name motion_cmd_node)
add_executable(${executable_name} 
      src/motion_cmd_node.cpp
  )
ament_target_dependencies(${executable_name} ${dependencies})
install(TARGETS ${library_name}
  DESTINATION lib)

install(TARGETS ${executable_name}
  DESTINATION lib/${PROJECT_NAME}
)

install(DIRECTORY include/
  DESTINATION include/${PROJECT_NAME}
)

install(DIRECTORY
  launch
  params
  rviz
  config
  DESTINATION share/${PROJECT_NAME}/
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
